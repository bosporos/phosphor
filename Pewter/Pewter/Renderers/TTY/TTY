// -*- mode: c++ -*-

//
// project pewter
// author Maximilien M. Cura
//

#ifndef __PEWTER_TTY_RENDERER
#define __PEWTER_TTY_RENDERER

#include <Venice/Math/Integers>
#include <Pewter/Display>
#include <Pewter/Glyph>

#include <map>

#include <termios.h>

namespace pewter::render::tty {
    ;

    struct TTYGlyphMapping
    {
        std::map<::pewter::GlyphInternal, const char *> mapping;

        void map (::pewter::GlyphInternal, const char *);
        const char * mapped (::pewter::GlyphInternal);
    };

    struct TTYRenderer
        : public ::pewter::Renderer
    {
        vnz::math::_i32 fd;

        struct termios tty_initial_state;
        struct termios tty_current_state;

        Point<::pewter::DisplayCoord> current_size { 0, 0 };

        TTYGlyphMapping * glyph_mapping;

        bool is_alt = false;

        ResizingBuffer<bool> delta_cache;

        TTYRenderer (vnz::math::_i32, TTYGlyphMapping *);
        ~TTYRenderer ();

        void tty_escape (const char * fmt, ...);
        void tty_measure ();
        void tty_render_glyph (Glyph *);

        virtual void init ();
        virtual void close ();
        virtual void render_deltas (Display *);
        virtual void render_full (Display *);
    };
}

#endif /* !@__PEWTER_TTY_RENDERER */
