// -*- mode: c++ -*-

//
// project pewter
// author Maximilien M. Cura
//

#ifndef __PEWTER_EVENT
#define __PEWTER_EVENT

#include <Venice/Math/Integers>

#include <vector>
#include <map>
#include <string>

namespace pewter::event {
    typedef vnz::math::_u64 EventID;

    struct Event
    {
        EventID event_type;
        void * event_paremeters;
    };

    ALWAYS_INLINE Event event (EventID eid, void * parms)
    {
        return Event { eid, parms };
    }

    typedef void (*EventResponderFn) (Event);

    struct EventResponderStack
    {
        std::vector<EventResponderFn> responders;

        EventResponderStack ();

        void add_responder (EventResponderFn);
        void dispatch (Event);
    };

    struct EventRegistry
    {
        // todo: make this a string search tree
        std::vector<std::string> event_names;

        EventID try_register_event (const char * event_name);
    };
}

#endif /* !@__PEWTER_EVENT */
