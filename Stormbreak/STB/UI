// -*- mode: c++ -*-

//
// project stormbreak
// author Maximilien M. Cura
//

#ifndef __STB_UI
#define __STB_UI

#include <Pewter/Color>
#include <Pewter/Display>
#include <Pewter/Glyph>
#include <Pewter/Input>
#include <Pewter/Engines/TTY/TTY>
#include <Pewter/Input>

#include <STB/Logging>

#include <queue>

namespace STB {
    extern pewter::engine::tty::TTY * tty;
    extern pewter::engine::tty::TTYRenderer * tty_renderer;

    typedef vnz::math::_i64 MenuChoice;
    enum class YNQ {
        Yes,
        No,
        Quit,
        NoDefault,
    };

    struct Menu
    {
        struct Item
        {
            const char * item_label;
            const MenuChoice item_choice;
            const char item_selector;
            const bool item_enabled;
        };

        const char * menu_title;
        std::vector<Item> menu_items;

        Menu (const char *);
        Menu & item (const char *, MenuChoice, char = ' ', bool = true);
    };

    struct MenuUI
    {
        pewter::Layer menu_layer;
        pewter::Display & display;

        MenuUI (pewter::Rect<pewter::DisplayCoord>, pewter::Display &);
        void ui_sizechange (pewter::Rect<pewter::DisplayCoord>);

        MenuChoice ui_menu (Menu);
    };

    struct NoticeUI
    {
        pewter::Display & display;
        pewter::Layer notice_layer;

        NoticeUI (pewter::Display &);
        void ui_sizechange (pewter::Rect<pewter::DisplayCoord>);

        void notice (const char *, bool = true);
        YNQ prompt_choice (const char *, YNQ = YNQ::NoDefault, bool = false);
    };

    void place_on_layer (
        pewter::Display & display,
        pewter::Layer & layer,
        pewter::DisplayCoord x,
        const pewter::DisplayCoord y,
        const pewter::GlyphInternal * seq,
        const vnz::math::_usize seqlen,
        pewter::GlyphProperties gp,
        pewter::Pair coloring);

    // no string input yet...
}

#endif /* !@__STB_UI */
